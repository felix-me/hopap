{
  "_args": [
    [
      {
        "raw": "xmlchars@^1.3.1",
        "scope": null,
        "escapedName": "xmlchars",
        "name": "xmlchars",
        "rawSpec": "^1.3.1",
        "spec": ">=1.3.1 <2.0.0",
        "type": "range"
      },
      "/home/cthulu/Projects/felix-commando-fitness/node_modules/saxes"
    ]
  ],
  "_from": "xmlchars@^1.3.1",
  "_hasShrinkwrap": false,
  "_id": "xmlchars@1.3.1",
  "_location": "/xmlchars",
  "_nodeVersion": "10.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/xmlchars_1.3.1_1538392781305_0.15015225283092426"
  },
  "_npmUser": {
    "name": "lddubeau",
    "email": "ldd@lddubeau.com"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "xmlchars@^1.3.1",
    "scope": null,
    "escapedName": "xmlchars",
    "name": "xmlchars",
    "rawSpec": "^1.3.1",
    "spec": ">=1.3.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/saxes"
  ],
  "_resolved": "https://registry.npmjs.org/xmlchars/-/xmlchars-1.3.1.tgz",
  "_shasum": "1dda035f833dbb4f86a0c28eaa6ca769214793cf",
  "_shrinkwrap": null,
  "_spec": "xmlchars@^1.3.1",
  "_where": "/home/cthulu/Projects/felix-commando-fitness/node_modules/saxes",
  "author": {
    "name": "Louis-Dominique Dubeau",
    "email": "ldd@lddubeau.com"
  },
  "bugs": {
    "url": "https://github.com/lddubeau/xmlchars/issues"
  },
  "dependencies": {},
  "description": "Utilities for determining if characters belong to character classes defined by the XML specs.",
  "devDependencies": {
    "@commitlint/cli": "^7.0.0",
    "@commitlint/config-angular": "^7.0.1",
    "@types/chai": "^4.1.4",
    "@types/mocha": "^5.2.4",
    "chai": "^4.1.2",
    "conventional-changelog-cli": "^2.0.1",
    "husky": "^0.14.3",
    "mocha": "^5.2.0",
    "ts-node": "^7.0.0",
    "tslint": "^5.10.0",
    "tslint-config-lddubeau": "^2.0.3",
    "typescript": "^2.9.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-tGkGJkN8XqCod7OT+EvGYK5Z4SfDQGD30zAa58OcnAa0RRWgzUEK72tkXhsX1FZd+rgnhRxFtmO+ihkp8LHSkw==",
    "shasum": "1dda035f833dbb4f86a0c28eaa6ca769214793cf",
    "tarball": "https://registry.npmjs.org/xmlchars/-/xmlchars-1.3.1.tgz",
    "fileCount": 15,
    "unpackedSize": 48285,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbsgLOCRA9TVsSAnZWagAAsMYP/iAKS1R3GY7sGsQGqP1g\nPg5k5EK9e9ax8uIIsXxv7+ckGiKCJigO8D31B9FFQyUtjVrZxeMGChVptg/t\nHF6JEVc2lGPeDpmEMtP1Uf57Z+KQBkLtwXamSJIrUAfWpSTaVN+SJ35WvoaC\nGwRpIMRqUW3z+QwDBA5VQTADdpKcH78aTNmmXt2f//tYVVVQpa4Up8c+2xT9\nKLvu2ESrRmRGVTRgejdy+9mqMewrdl1WWpq6gGkDFx/M+2iQwgU1USEGcxFQ\nh9Ac/eIc1aAgPsCGdWpFFguuiz4zrCAVcDOjmnb2OfZfwxbf39yqGs5Bz5J8\nNvJso+v9RYW6Pqj344l5r3R/lbBc+geNjRqqgkr6qmRPQzu52BLlktLZrncO\nFEyKgVF9wc8VDqZGYaSOowC2oRffLoiVlnbEPuWcxAD1ZkAGLBOUOYXROctL\nG7JS8V9lw+THsn9ywKfw+HePzuQ3Z6svWUgKrIipsrWWNbCbY71L1Ojp8YJo\nodowlovIMC1vejA23hKT5eULlasmWSckWpxVjVOVadIcHdABTZ3OyKgrikW0\nT5te9F93V1aIgW3AiLOnT4FzABZV+CJ3yZby6kGfj9im8vXByH5vBFfQ1TtG\ni4xbBEA/RxkkU0P9bk1GUQRsTAn4oKtNEy6fk3lnO1EwRpIldjFuvWuerr8Q\nH4S2\r\n=Fmu8\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "homepage": "https://github.com/lddubeau/xmlchars#readme",
  "keywords": [
    "XML",
    "validation"
  ],
  "license": "MIT",
  "main": "xmlchars.js",
  "maintainers": [
    {
      "name": "lddubeau",
      "email": "ldd@lddubeau.com"
    }
  ],
  "name": "xmlchars",
  "optionalDependencies": {},
  "readme": "Utilities for determining whether characters belong to character classes defined\nby the XML specs.\n\n## Organization\n\nIt used to be that the library was contained in a single file and you could just\nimport/require/what-have-you the `xmlchars` module. However, that setup did not\nwork well for people who cared about code optimization. Importing `xmlchars`\nmeant importing *all* of the library and because of the way the code was\ngenerated there was no way to shake the resulting code tree.\n\nSince version 1.3.0, importing `xmlchars` is deprecated. Instead, you should\ndirectly load the file from `xmlchars/lib` that you care about. Even without\ntree shaking being used, this results in a smaller footprint.\n\nDifferent modules cover different standards. At the time this documentation was\nlast updated, we had:\n\n* `xmlchars/xml/1.0/ed5` which covers XML 1.0 edition 5.\n* `xmlchars/xml/1.0/ed4` which covers XML 1.0 edition 4.\n* `xmlchars/xmlns/1.0/ed3` which covers XML Namespaces 1.0 edition 3.\n\n## Features\n\nThe \"things\" each module contains can be categorized as follows:\n\n1. \"Fragments\": these are parts and pieces of regular expressions that\ncorrespond to the productions defined in the standard that the module\ncovers. You'd use these to *build regular expressions*.\n\n2. Regular expressions that correspond to the productions defined in the\nstandard that the module covers.\n\n3. Lists: these are arrays of characters that correspond to the productions.\n\n4. Functions that test code points to verify whether they fit a production.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lddubeau/xmlchars.git"
  },
  "scripts": {
    "build": "tsc && npm run copy",
    "clean": "rm -rf build",
    "commitmsg": "commitlint -E GIT_PARAMS",
    "copy": "cp README.md LICENSE build/dist && sed -e'/\"private\": true/d' package.json > build/dist/package.json",
    "postpublish": "git push origin --follow-tags",
    "posttest": "tslint -p tsconfig.json && tslint -p test/tsconfig.json",
    "postversion": "npm run xmlchars:publish",
    "prepack": "node -e 'require(\"assert\")(!require(\"./package.json\").private)'",
    "prepublishOnly": "node -e 'require(\"assert\")(!require(\"./package.json\").private)'",
    "pretest": "npm run build",
    "preversion": "npm run test-install",
    "test": "mocha",
    "test-install": "npm run test && (test_dir=build/install_dir; rm -rf $test_dir; mkdir -p $test_dir/node_modules; packname=`npm run xmlchars:pack --silent`; (cd $test_dir; npm install ../$packname); rm -rf $test_dir)",
    "version": "conventional-changelog -p angular -i CHANGELOG.md -s && git add CHANGELOG.md",
    "xmlchars:pack": "cd build/dist/ && (packname=`npm pack --silent`; mv $packname ..; echo $packname)",
    "xmlchars:publish": "npm run test-install && (cd build/dist && npm publish)"
  },
  "types": "xmlchars.d.ts",
  "version": "1.3.1"
}
